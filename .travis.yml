# We will use docker to set up out environment, so don't use any particular
# language in Travis itself
language: generic

# Enable docker
sudo: required
services:
    - docker

# Disable automatic submodule fetching (it's done recursively)
git:
    submodules: false

# Global environment variables
env:
    global:
        - ARTIFACTS_DIR=build/travis-artifacts
        - DIST=xenial
        # Make sure beaver is in the PATH
        - PATH="$(git config -f .gitmodules submodule.beaver.path)/bin:$PATH"

# Do a shallow submodule fetch
before_install: git submodule update --init

# Create docker images and setup environment to build
install: beaver dlang install

# (Ab)use Travis cache to pass artifacts between stages.
# As long as the environment variables of different stages match, travis will
# pull the same "cache", so we can use this to actually pass artifacts between
# stages.
cache:
    directories:
        - $ARTIFACTS_DIR

# Basic config is inherited from the global scope
jobs:
    templates:
        - &test-matrix
          stage: Test
          script:
              - beaver dlang make
              # Build packages too, this should be done by beaver:
              # https://github.com/sociomantic-tsunami/beaver/issues/34
              - beaver dlang make pkg
              # If this is a tag, save the packages in the cache directory so
              # it's accessible in the Upload Package stage
              - if test -n "$TRAVIS_TAG"; then
                    cp -v build/last/pkg/*.deb "$ARTIFACTS_DIR/";
                fi
    include:
        # Test matrix
        - <<: *test-matrix
          env: DMD=1.081.* F=production
        - <<: *test-matrix
          env: DMD=1.081.* F=devel
        - <<: *test-matrix
          env: DMD=2.070.*.s* F=production
        - <<: *test-matrix
          env: DMD=2.070.2.s* F=devel

        - stage: Upload Package
          if: tag IS present
          env: DMD=1.081.* F=production
          script:
              - beaver bintray upload -d sociomantic-tsunami/nodes/dhtnode
                "$ARTIFACTS_DIR"/*.deb
